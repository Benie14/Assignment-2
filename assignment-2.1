def hex_to_binary(hex_number):
    # Dictionary to map hexadecimal digits to their binary equivalents
    hex_to_bin = {
        '0': '0000', '1': '0001', '2': '0010', '3': '0011',
        '4': '0100', '5': '0101', '6': '0110', '7': '0111',
        '8': '1000', '9': '1001', 'A': '1010', 'B': '1011',
        'C': '1100', 'D': '1101', 'E': '1110', 'F': '1111'
    }
    
    # Convert each hexadecimal digit to its binary equivalent
    binary_number = ''
    for digit in hex_number:
        if digit.upper() in hex_to_bin:
            binary_number += hex_to_bin[digit.upper()]
        else:
            return "Invalid hexadecimal digit"
    
    # Remove leading zeros if any
    binary_number = binary_number.lstrip('0')
    
    # If the binary number is empty, it means the input was '0'
    if not binary_number:
        binary_number = '0'
    
    return binary_number

# Example usage
hex_number = input("Enter a hexadecimal number: ")
binary_number = hex_to_binary(hex_number)
print(f"The binary equivalent of {hex_number} is {binary_number}")
